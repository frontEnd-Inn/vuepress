(window.webpackJsonp=window.webpackJsonp||[]).push([[243],{629:function(t,s,a){"use strict";a.r(s);var n=a(23),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"重写历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重写历史"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E9%87%8D%E5%86%99%E5%8E%86%E5%8F%B2",target:"_blank",rel:"noopener noreferrer"}},[t._v("重写历史"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_0-修改编辑器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-修改编辑器"}},[t._v("#")]),t._v(" 0. 修改编辑器")]),t._v(" "),a("p",[t._v("在开始之前修改编辑器为 vim，否则会选用系统默认的，比如 nano（完全不会用 😢）。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" .git/config "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config core.editor "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" .git/config "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 验证")]),t._v("\n")])])]),a("h3",{attrs:{id:"_1-修改最新-commit-信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-修改最新-commit-信息"}},[t._v("#")]),t._v(" 1. 修改最新 commit 信息")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend\n")])])]),a("h3",{attrs:{id:"_2-修改之前-commit-信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-修改之前-commit-信息"}},[t._v("#")]),t._v(" 2. 修改之前 commit 信息")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取 hash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hash 值为对应元素的父元素的hash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("hash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 找到要修改的 commit（即第一行 commit）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将 pick 修改为 r，保存退出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自动切换至修改 commit 信息界面，修改即可")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 验证")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"_3-合并多个-commit-信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-合并多个-commit-信息"}},[t._v("#")]),t._v(" 3. 合并多个 commit 信息")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取 hash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hash 值为对应元素最后一个的父元素的hash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 个人的理解是，你改变了信息后就无法证明自己是自己，需要介绍父级节点来证明自己")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("hash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 找到要修改的 commit")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 即保留第一行 commit，修改下面行至你期望的目标行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将 pick 修改为 s，保存退出")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自动切换至修改 commit 信息界面，修改即可")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 验证")]),t._v("\n")])])]),a("p",[t._v("当然还有更简单一些的方法：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取 hash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hash 值为对应元素最后一个的父元素的hash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --soft 3bc965a619447a75375aba "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hash 也可以更为暴力的改为 master（对应分支名,一般是以 feature/bugfix 创建分支，所以该行为简单粗暴）")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -am "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"更简单的方法"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -am 对已跟踪的文件提交信息，不会影响尚未 add 的文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 验证")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);